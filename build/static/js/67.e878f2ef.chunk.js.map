{"version":3,"sources":["../node_modules/reactstrap/es/Col.js","components/astrology/astrologerpages/OtpVerify.js"],"names":["_excluded","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","length","classes","createElement","OtpVerify","state","otp","resenddd","setState","interval","sendOtp","customer_email","mobile","msg","input","errors","handleChange","handleSubmit","bind","this","seconds","evt","target","name","value","event","preventDefault","axios","post","then","res","console","log","alert","swal","history","catch","error","response","headerTop","onSubmit","type","placeholder","onChange","changeHandler","React","Component"],"mappings":"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","file":"static/js/67.e878f2ef.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row,  Col, Input, InputGroup, Form,Button } from \"reactstrap\";\r\nimport LayoutOne from \"../../../layouts/LayoutOne\";\r\nimport \"../../../assets/scss/astroteam.scss\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nclass OtpVerify extends React.Component {\r\n \r\n  state = { otp: '' };\r\n  constructor() {\r\n  super();\r\n  this.state= {\r\n    customer_email:\"\",\r\n    // visible : false,\r\n    mobile:\"\",\r\n    otp: \"123456\",\r\n    msg:\"\",\r\n\r\n  //   \"status\": true,\r\n\r\n    \r\n    input: {},\r\n    errors: {},\r\n\r\n  }\r\n//     this.handleChange = otp => this.setState({ otp });\r\n//     this.handleChange = this.handleChange.bind(this);\r\n// this.handleSubmit = this.handleSubmit.bind(this);\r\nthis.handleChange = (otp) => this.setState({ otp });\r\nthis.handleSubmit = this.handleSubmit.bind(this);\r\n} \r\n\r\nresenddd = () => {\r\nthis.setState({otp:''})\r\nthis.interval()\r\nthis.sendOtp()\r\n}\r\ninterval() {\r\nthis.setState({ seconds: 26 });\r\n\r\n  // let myInterval = setInterval(() => {\r\n  //     if (this.state.seconds == 0) {\r\n  //         clearInterval(myInterval);\r\n  //     } else {\r\n  //         this.setState({ seconds: this.state.seconds - 1 });\r\n  //     }\r\n  // }, 1000)\r\n}\r\nhandleChange(evt) {\r\n// const value=evt.target.value;\r\nthis.setState({ [evt.target.name]: evt.target.value });\r\n}  \r\n\r\n\r\nhandleSubmit(event)  {\r\n  event.preventDefault();\r\n  // this.otpIntegration()\r\n  // handleverifyotp=()=>{\r\n  //   const sendData = {\r\n  //     customer_email:localStorage.getItem('customer_email'),\r\n  //     status: this.state.status,\r\n  //   };\r\n          \r\n  axios.post(\"http://13.235.180.192:8000/user/verifyotp\",this.state)\r\n      \r\n    .then(res => {\r\n          console.log(res);\r\n          alert(\"anjali\")\r\n          swal(\"Success!\", \" OTP Verify Successful Done!\", \"success\");\r\n          this.props.history.push(\"/completeproastro\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response)\r\n      });\r\n }\r\n  \r\n\r\n\r\n  render() {\r\n\r\n\r\n  return (\r\n\r\n    <LayoutOne headerTop=\"visible\">\r\n        <section>\r\n              <Container>\r\n                    <Row>\r\n                       <Col lg=\"2\">\r\n\r\n                       </Col>\r\n                        <Col lg=\"8\">\r\n                           <div className=\"wal-amt\">\r\n                                <h1>Verify OTP</h1>\r\n                                <hr></hr>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                   <Row>\r\n                                      <Col md=\"12\">\r\n                                         <label>Enter Your OTP Here</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter OTP\"\r\n                                                name=\"otp\"\r\n                                                value={this.state.otp}\r\n                                                onChange={this.changeHandler}\r\n                                            />  \r\n                                      </Col>\r\n                                      <Col md=\"12\" className=\"mt-3\">\r\n                                          <Button className=\"btn btn-success\">Submit</Button>\r\n                                      </Col>\r\n                                   </Row>\r\n                                     \r\n                                </form>\r\n                           </div>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                        \r\n                        </Col>\r\n                    </Row>\r\n              </Container>\r\n        </section>\r\n   </LayoutOne>\r\n  );\r\n  }\r\n}\r\n\r\n\r\nexport default OtpVerify;\r\n"],"sourceRoot":""}